// docs: https://chatgpt.com/c/49d98c06-f1bf-4e42-b922-abf39b1d531a

<?php

// Function to get products by parent model
function get_products_by_parent_model($parent_model) {
    $args = array(
        'post_type' => 'product',
        'posts_per_page' => -1,
        'meta_query' => array(
            array(
                'key' => 'parent_model',
                'value' => $parent_model,
                'compare' => '='
            )
        )
    );

    $query = new WP_Query($args);
    return $query->posts;
}

// Existing function to get product attributes
function get_product_attributes($product_id) {
    // Get the product object
    $product = wc_get_product($product_id);

    if (!$product) {
        return [];
    }

    // Get product attributes
    $attributes = $product->get_attributes();

    // Initialize an array to store attribute names, slugs, and values
    $attributes_array = [];

    foreach ($attributes as $attribute) {
        // Get attribute label and slug
        $label = wc_attribute_label($attribute->get_name());
        $slug = sanitize_title($attribute->get_name());

        // Get attribute values
        if ($attribute->is_taxonomy()) {
            $terms = wc_get_product_terms($product->get_id(), $attribute->get_name(), array('fields' => 'names'));
            $value = $terms;
        } else {
            $value = $attribute->get_options();
        }

        // Add to attributes array using slug as the key
        if (!isset($attributes_array[$slug])) {
            $attributes_array[$slug] = [
                'name' => $label,
                'values' => []
            ];
        }

        // Merge values and keep them unique
        $attributes_array[$slug]['values'] = array_unique(array_merge($attributes_array[$slug]['values'], $value));
    }

    return $attributes_array;
}

// Function to merge attributes of products with a given parent model
function merge_product_attributes_by_parent_model($parent_model) {
    $products = get_products_by_parent_model($parent_model);

    // Initialize an array to store merged attributes
    $merged_attributes = [];

    foreach ($products as $product) {
        $product_id = $product->ID;
        $attributes = get_product_attributes($product_id);

        // Merge attributes from each product
        foreach ($attributes as $slug => $attribute) {
            if (!isset($merged_attributes[$slug])) {
                $merged_attributes[$slug] = $attribute;
            } else {
                $merged_attributes[$slug]['values'] = array_unique(array_merge($merged_attributes[$slug]['values'], $attribute['values']));
            }
        }
    }

    // Print the merged array of attributes
    echo '<pre>';
    print_r($merged_attributes);
    echo '</pre>';
}

// Example usage: Replace 3366 with your specific parent model ID
$parent_model = 3366; // Replace with your parent model ID
merge_product_attributes_by_parent_model($parent_model);

